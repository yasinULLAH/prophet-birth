// Auto-generated by PWA builder script v1.1.0
importScripts('https://storage.googleapis.com/workbox-cdn/releases/7.0.0/workbox-sw.js');

if (workbox) {
  console.log('Workbox is loaded.');

  self.addEventListener('message', (event) => {
    if (event.data && event.data.type === 'SKIP_WAITING') {
      console.log('Service Worker received SKIP_WAITING message, activating now.');
      self.skipWaiting();
    }
  });

  workbox.core.clientsClaim();

  // Precache (per discovered assets and PHP caching rule)
  workbox.precaching.precacheAndRoute([
    {
        "url": "icon-72.png",
        "revision": "e6d5da69b4352246f4c9af6db797a7f0"
    },
    {
        "url": "icon-96.png",
        "revision": "bc795da2e1aadf04cf7c06cd5271bf2a"
    },
    {
        "url": "icon-128.png",
        "revision": "390ee4159b7083d1d0d71bc9785896c5"
    },
    {
        "url": "icon-144.png",
        "revision": "8d8a3b7bb3ac6bac526960452adae32b"
    },
    {
        "url": "icon-152.png",
        "revision": "23718f36722fd2bacfdfce0b7b387917"
    },
    {
        "url": "icon-192.png",
        "revision": "b1dad41d690ae853ee94ae4ca7bcecf9"
    },
    {
        "url": "icon-384.png",
        "revision": "12733b8b79bba21324ee8f5892056183"
    },
    {
        "url": "icon-512.png",
        "revision": "79cf656a0d5527bd318370d8a4ef1e3c"
    },
    {
        "url": "adhan.umd.min.js",
        "revision": "3d1e269055e0297fa0dc2b320e9ca36f"
    },
    {
        "url": "app.js",
        "revision": "ae9742c1ef9e3cd956b5f183d4eaf578"
    },
    {
        "url": "build pwa make php app offline and installable yasin best working re-run this for updates new.py",
        "revision": "2aeda70e7a739f6a0ee3671898caeb01"
    },
    {
        "url": "db.sql",
        "revision": "cce86d587dfb183e9e10941ce2a90472"
    },
    {
        "url": "favicon.ico",
        "revision": "2ccb4c012761e3643dd2663117902357"
    },
    {
        "url": "index.html",
        "revision": "9fdabd4c20257e2d3d5ef8faefa8e99e"
    },
    {
        "url": "logo.jpg",
        "revision": "3c0de7adc79832d52f005d2c5db797b3"
    },
    {
        "url": "logo2.jpg",
        "revision": "7cab1f1374819dd82edc42d6a207be77"
    },
    {
        "url": "manifest.json",
        "revision": "ab9e19d667c4ced63e6c2d6af270da64"
    },
    {
        "url": "offline.html",
        "revision": "8f26b38cf3f9126c6a161c45ddd6301c"
    },
    {
        "url": "sw.js",
        "revision": "ba0954f7b352ef756561bc9119c71424"
    }
]);

  // Runtime caching for CSS/JS
  workbox.routing.registerRoute(
    ({request}) => request.destination === 'style' || request.destination === 'script',
    new workbox.strategies.StaleWhileRevalidate({ cacheName: 'asset-cache' })
  );

  // Images cache
  workbox.routing.registerRoute(
    ({request}) => request.destination === 'image',
    new workbox.strategies.CacheFirst({
      cacheName: 'image-cache',
      plugins: [ new workbox.expiration.ExpirationPlugin({ maxEntries: 60, maxAgeSeconds: 30 * 24 * 60 * 60 }) ],
    })
  );

  // For PHP documents, use regular network; offline shows offline.html

  workbox.routing.registerRoute(( {request} ) => request.destination === 'document' && new URL(request.url).pathname.endsWith('.php'), new workbox.strategies.NetworkOnly());

  // Generic offline fallback for documents (HTML/PHP)
  workbox.routing.setCatchHandler(async ({event}) => {
    if (event.request && event.request.destination === 'document') {
      const cached = await caches.match('offline.html');
      return cached || Response.error();
    }
    return Response.error();
  });

} else {
  console.log('Workbox failed to load.');
}